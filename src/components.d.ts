/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface FireParagraph {
    }
    interface HsAvatar {
        "image": string;
    }
    interface HsGrid {
        "columns": number;
    }
    interface HsGridColumn {
    }
    interface HsStack {
        "direction": 'col' | 'row';
        "spacing": string;
    }
    interface NfButton {
        "size": string;
        "variant": string;
    }
    interface NfHeader {
        "level": number;
        "textAlign": 'left' | 'right' | 'center';
    }
}
export interface NfButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLNfButtonElement;
}
declare global {
    interface HTMLFireParagraphElement extends Components.FireParagraph, HTMLStencilElement {
    }
    var HTMLFireParagraphElement: {
        prototype: HTMLFireParagraphElement;
        new (): HTMLFireParagraphElement;
    };
    interface HTMLHsAvatarElement extends Components.HsAvatar, HTMLStencilElement {
    }
    var HTMLHsAvatarElement: {
        prototype: HTMLHsAvatarElement;
        new (): HTMLHsAvatarElement;
    };
    interface HTMLHsGridElement extends Components.HsGrid, HTMLStencilElement {
    }
    var HTMLHsGridElement: {
        prototype: HTMLHsGridElement;
        new (): HTMLHsGridElement;
    };
    interface HTMLHsGridColumnElement extends Components.HsGridColumn, HTMLStencilElement {
    }
    var HTMLHsGridColumnElement: {
        prototype: HTMLHsGridColumnElement;
        new (): HTMLHsGridColumnElement;
    };
    interface HTMLHsStackElement extends Components.HsStack, HTMLStencilElement {
    }
    var HTMLHsStackElement: {
        prototype: HTMLHsStackElement;
        new (): HTMLHsStackElement;
    };
    interface HTMLNfButtonElement extends Components.NfButton, HTMLStencilElement {
    }
    var HTMLNfButtonElement: {
        prototype: HTMLNfButtonElement;
        new (): HTMLNfButtonElement;
    };
    interface HTMLNfHeaderElement extends Components.NfHeader, HTMLStencilElement {
    }
    var HTMLNfHeaderElement: {
        prototype: HTMLNfHeaderElement;
        new (): HTMLNfHeaderElement;
    };
    interface HTMLElementTagNameMap {
        "fire-paragraph": HTMLFireParagraphElement;
        "hs-avatar": HTMLHsAvatarElement;
        "hs-grid": HTMLHsGridElement;
        "hs-grid-column": HTMLHsGridColumnElement;
        "hs-stack": HTMLHsStackElement;
        "nf-button": HTMLNfButtonElement;
        "nf-header": HTMLNfHeaderElement;
    }
}
declare namespace LocalJSX {
    interface FireParagraph {
    }
    interface HsAvatar {
        "image"?: string;
    }
    interface HsGrid {
        "columns"?: number;
    }
    interface HsGridColumn {
    }
    interface HsStack {
        "direction"?: 'col' | 'row';
        "spacing"?: string;
    }
    interface NfButton {
        "onClicked"?: (event: NfButtonCustomEvent<any>) => void;
        "size"?: string;
        "variant"?: string;
    }
    interface NfHeader {
        "level"?: number;
        "textAlign"?: 'left' | 'right' | 'center';
    }
    interface IntrinsicElements {
        "fire-paragraph": FireParagraph;
        "hs-avatar": HsAvatar;
        "hs-grid": HsGrid;
        "hs-grid-column": HsGridColumn;
        "hs-stack": HsStack;
        "nf-button": NfButton;
        "nf-header": NfHeader;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "fire-paragraph": LocalJSX.FireParagraph & JSXBase.HTMLAttributes<HTMLFireParagraphElement>;
            "hs-avatar": LocalJSX.HsAvatar & JSXBase.HTMLAttributes<HTMLHsAvatarElement>;
            "hs-grid": LocalJSX.HsGrid & JSXBase.HTMLAttributes<HTMLHsGridElement>;
            "hs-grid-column": LocalJSX.HsGridColumn & JSXBase.HTMLAttributes<HTMLHsGridColumnElement>;
            "hs-stack": LocalJSX.HsStack & JSXBase.HTMLAttributes<HTMLHsStackElement>;
            "nf-button": LocalJSX.NfButton & JSXBase.HTMLAttributes<HTMLNfButtonElement>;
            "nf-header": LocalJSX.NfHeader & JSXBase.HTMLAttributes<HTMLNfHeaderElement>;
        }
    }
}
